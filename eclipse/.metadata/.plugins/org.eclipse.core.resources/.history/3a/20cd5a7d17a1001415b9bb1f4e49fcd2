package com.miner3389.nerdspeaq;

import com.miner3389.nerdspeaq.handler.ConfigurationHandler;
import com.miner3389.nerdspeaq.init.NSBlocks;
import com.miner3389.nerdspeaq.init.NSItems;
import com.miner3389.nerdspeaq.init.NSOreDictionary;
import com.miner3389.nerdspeaq.init.NSRecipies;
import com.miner3389.nerdspeaq.proxies.IProxy;
import com.miner3389.nerdspeaq.reference.NSModReference;
import com.miner3389.nerdspeaq.utility.LoggingHelper;
import com.miner3389.nerdspeaq.world.gen.NSWorldGeneratorOre;
import com.miner3389.nerdspeaq.world.gen.NSWorldGeneratorStructures;

import cpw.mods.fml.common.FMLCommonHandler;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;

@Mod(modid=NSModReference.MOD_ID, name=NSModReference.MOD_NAME, version=NSModReference.VERSION, guiFactory=NSModReference.GUI_FACTORY_CLASS)
 public class NerdSpeaq {
	
	//Hey, you should put that song from the scene Ocean's Twelve where the Nightfox is going through the laser field on your programming play list
	@Mod.Instance(NSModReference.MOD_ID)
	public static NerdSpeaq instance;
	
	@SidedProxy(clientSide = NSModReference.CLIENT_PROXY_CLASS, 
			serverSide = NSModReference.SERVER_PROXY_CLASS, 
			modId = NSModReference.MOD_ID)
	public static IProxy proxy;
	
	//Init stuff
	@Mod.EventHandler
	public void preInit(FMLPreInitializationEvent event){
		LoggingHelper.info("Configuring Configuration");
		ConfigurationHandler.init(event.getSuggestedConfigurationFile());
		FMLCommonHandler.instance().bus().register(new ConfigurationHandler());
		
		LoggingHelper.info("Registering Proxies");
		proxy.registerKeyBindings();
		
		LoggingHelper.info("Registering Blocks and Items");
		NSItems.init();
		NSBlocks.init();
		
		LoggingHelper.info("Registering World Generation");
		GameRegistry.registerWorldGenerator(new NSWorldGeneratorStructures(), 0);
		GameRegistry.registerWorldGenerator(new NSWorldGeneratorOre(), 0);
		
		LoggingHelper.info("Pre Initialization Complete");

	}
	
	//Other Stuff
	@Mod.EventHandler
	public void init(FMLInitializationEvent event){
		LoggingHelper.info("Binding Keys");
		FMLCommonHandler.instance().bus().register(new KeyInputHandler());
		
		LoggingHelper.info("Registering Recipies");
		NSRecipies.init();
		
		LoggingHelper.info("Initialization Complete");
	}
	
	//Interact w/ other mods
	@Mod.EventHandler
	public void postInit(FMLPostInitializationEvent event){
		LoggingHelper.info("Writing entries into Ore Dictionary");
		NSOreDictionary.init();

		LoggingHelper.info("Post Initialization Complete");
	}
	
}
